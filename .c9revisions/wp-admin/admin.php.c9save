{"ts":1371501704254,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<?php\n/**\n * WordPress Administration Bootstrap\n *\n * @package WordPress\n * @subpackage Administration\n */\n\n/**\n * In WordPress Administration Screens\n *\n * @since 2.3.2\n */\nif ( ! defined('WP_ADMIN') )\n\tdefine('WP_ADMIN', true);\n\nif ( ! defined('WP_NETWORK_ADMIN') )\n\tdefine('WP_NETWORK_ADMIN', false);\n\nif ( ! defined('WP_USER_ADMIN') )\n\tdefine('WP_USER_ADMIN', false);\n\nif ( ! WP_NETWORK_ADMIN && ! WP_USER_ADMIN ) {\n\tdefine('WP_BLOG_ADMIN', true);\n}\n\nif ( isset($_GET['import']) && !defined('WP_LOAD_IMPORTERS') )\n\tdefine('WP_LOAD_IMPORTERS', true);\n\nrequire_once(dirname(dirname(__FILE__)) . '/wp-load.php');\n\nnocache_headers();\n\nif ( get_option('db_upgraded') ) {\n\tflush_rewrite_rules();\n\tupdate_option( 'db_upgraded',  false );\n\n\t/**\n\t * Runs on the next page load after successful upgrade\n\t *\n\t * @since 2.8\n\t */\n\tdo_action('after_db_upgrade');\n} elseif ( get_option('db_version') != $wp_db_version && empty($_POST) ) {\n\tif ( !is_multisite() ) {\n\t\twp_redirect(admin_url('upgrade.php?_wp_http_referer=' . urlencode(stripslashes($_SERVER['REQUEST_URI']))));\n\t\texit;\n\t} elseif ( apply_filters( 'do_mu_upgrade', true ) ) {\n\t\t/**\n\t\t * On really small MU installs run the upgrader every time,\n\t\t * else run it less often to reduce load.\n\t\t *\n\t\t * @since 2.8.4b\n\t\t */\n\t\t$c = get_blog_count();\n\t\t// If 50 or fewer sites, run every time. Else, run \"about ten percent\" of the time. Shh, don't check that math.\n\t\tif ( $c <= 50 || ( $c > 50 && mt_rand( 0, (int)( $c / 50 ) ) == 1 ) ) {\n\t\t\trequire_once( ABSPATH . WPINC . '/http.php' );\n\t\t\t$response = wp_remote_get( admin_url( 'upgrade.php?step=1' ), array( 'timeout' => 120, 'httpversion' => '1.1' ) );\n\t\t\tdo_action( 'after_mu_upgrade', $response );\n\t\t\tunset($response);\n\t\t}\n\t\tunset($c);\n\t}\n}\n\nrequire_once(ABSPATH . 'wp-admin/includes/admin.php');\n\nauth_redirect();\n\n// Schedule trash collection\nif ( !wp_next_scheduled('wp_scheduled_delete') && !defined('WP_INSTALLING') )\n\twp_schedule_event(time(), 'daily', 'wp_scheduled_delete');\n\nset_screen_options();\n\n$date_format = get_option('date_format');\n$time_format = get_option('time_format');\n\nwp_reset_vars(array('profile', 'redirect', 'redirect_url', 'a', 'text', 'trackback', 'pingback'));\n\nwp_enqueue_script( 'common' );\n\n$editing = false;\n\nif ( isset($_GET['page']) ) {\n\t$plugin_page = stripslashes($_GET['page']);\n\t$plugin_page = plugin_basename($plugin_page);\n}\n\nif ( isset( $_REQUEST['post_type'] ) && post_type_exists( $_REQUEST['post_type'] ) )\n\t$typenow = $_REQUEST['post_type'];\nelse\n\t$typenow = '';\n\nif ( isset( $_REQUEST['taxonomy'] ) && taxonomy_exists( $_REQUEST['taxonomy'] ) )\n\t$taxnow = $_REQUEST['taxonomy'];\nelse\n\t$taxnow = '';\n\nif ( WP_NETWORK_ADMIN )\n\trequire(ABSPATH . 'wp-admin/network/menu.php');\nelseif ( WP_USER_ADMIN )\n\trequire(ABSPATH . 'wp-admin/user/menu.php');\nelse\n\trequire(ABSPATH . 'wp-admin/menu.php');\n\nif ( current_user_can( 'manage_options' ) )\n\t@ini_set( 'memory_limit', apply_filters( 'admin_memory_limit', WP_MAX_MEMORY_LIMIT ) );\n\ndo_action('admin_init');\n\nif ( isset($plugin_page) ) {\n\tif ( !empty($typenow) )\n\t\t$the_parent = $pagenow . '?post_type=' . $typenow;\n\telse\n\t\t$the_parent = $pagenow;\n\tif ( ! $page_hook = get_plugin_page_hook($plugin_page, $the_parent) ) {\n\t\t$page_hook = get_plugin_page_hook($plugin_page, $plugin_page);\n\t\t// backwards compatibility for plugins using add_management_page\n\t\tif ( empty( $page_hook ) && 'edit.php' == $pagenow && '' != get_plugin_page_hook($plugin_page, 'tools.php') ) {\n\t\t\t// There could be plugin specific params on the URL, so we need the whole query string\n\t\t\tif ( !empty($_SERVER[ 'QUERY_STRING' ]) )\n\t\t\t\t$query_string = $_SERVER[ 'QUERY_STRING' ];\n\t\t\telse\n\t\t\t\t$query_string = 'page=' . $plugin_page;\n\t\t\twp_redirect( admin_url('tools.php?' . $query_string) );\n\t\t\texit;\n\t\t}\n\t}\n\tunset($the_parent);\n}\n\n$hook_suffix = '';\nif ( isset($page_hook) )\n\t$hook_suffix = $page_hook;\nelse if ( isset($plugin_page) )\n\t$hook_suffix = $plugin_page;\nelse if ( isset($pagenow) )\n\t$hook_suffix = $pagenow;\n\nset_current_screen();\n\n// Handle plugin admin pages.\nif ( isset($plugin_page) ) {\n\tif ( $page_hook ) {\n\t\tdo_action('load-' . $page_hook);\n\t\tif (! isset($_GET['noheader']))\n\t\t\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\n\t\tdo_action($page_hook);\n\t} else {\n\t\tif ( validate_file($plugin_page) )\n\t\t\twp_die(__('Invalid plugin page'));\n\n\t\tif ( !( file_exists(WP_PLUGIN_DIR . \"/$plugin_page\") && is_file(WP_PLUGIN_DIR . \"/$plugin_page\") ) && !( file_exists(WPMU_PLUGIN_DIR . \"/$plugin_page\") && is_file(WPMU_PLUGIN_DIR . \"/$plugin_page\") ) )\n\t\t\twp_die(sprintf(__('Cannot load %s.'), htmlentities($plugin_page)));\n\n\t\tdo_action('load-' . $plugin_page);\n\n\t\tif ( !isset($_GET['noheader']))\n\t\t\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\n\t\tif ( file_exists(WPMU_PLUGIN_DIR . \"/$plugin_page\") )\n\t\t\tinclude(WPMU_PLUGIN_DIR . \"/$plugin_page\");\n\t\telse\n\t\t\tinclude(WP_PLUGIN_DIR . \"/$plugin_page\");\n\t}\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n\texit();\n} else if (isset($_GET['import'])) {\n\n\t$importer = $_GET['import'];\n\n\tif ( ! current_user_can('import') )\n\t\twp_die(__('You are not allowed to import.'));\n\n\tif ( validate_file($importer) ) {\n\t\twp_redirect( admin_url( 'import.php?invalid=' . $importer ) );\n\t\texit;\n\t}\n\n\tif ( ! isset($wp_importers[$importer]) || ! is_callable($wp_importers[$importer][2]) ) {\n\t\twp_redirect( admin_url( 'import.php?invalid=' . $importer ) );\n\t\texit;\n\t}\n\n\tdo_action( 'load-importer-' . $importer );\n\n\t$parent_file = 'tools.php';\n\t$submenu_file = 'import.php';\n\t$title = __('Import');\n\n\tif (! isset($_GET['noheader']))\n\t\trequire_once(ABSPATH . 'wp-admin/admin-header.php');\n\n\trequire_once(ABSPATH . 'wp-admin/includes/upgrade.php');\n\n\tdefine('WP_IMPORTING', true);\n\n\tif ( apply_filters( 'force_filtered_html_on_import', false ) )\n\t\tkses_init_filters();  // Always filter imported data with kses on multisite.\n\n\tcall_user_func($wp_importers[$importer][2]);\n\n\tinclude(ABSPATH . 'wp-admin/admin-footer.php');\n\n\t// Make sure rules are flushed\n\tflush_rewrite_rules(false);\n\n\texit();\n} else {\n\tdo_action(\"load-$pagenow\");\n\t// Backwards compatibility with old load-page-new.php, load-page.php,\n\t// and load-categories.php actions.\n\tif ( $typenow == 'page' ) {\n\t\tif ( $pagenow == 'post-new.php' )\n\t\t\tdo_action( 'load-page-new.php' );\n\t\telseif ( $pagenow == 'post.php' )\n\t\t\tdo_action( 'load-page.php' );\n\t}  elseif ( $pagenow == 'edit-tags.php' ) {\n\t\tif ( $taxnow == 'category' )\n\t\t\tdo_action( 'load-categories.php' );\n\t\telseif ( $taxnow == 'link_category' )\n\t\t\tdo_action( 'load-edit-link-categories.php' );\n\t}\n}\n\nif ( !empty($_REQUEST['action']) )\n\tdo_action('admin_action_' . $_REQUEST['action']);\n"]],"start1":0,"start2":0,"length1":0,"length2":6611}]],"length":6611}
